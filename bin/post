#!/bin/bash

createConfig() {
	echo '# path to blog files'
	echo 'path="/srv/http/sbb"'
} > $config/config

createIndexFile() {
	echo '<DOCTYPE html>'
	echo "<html>"
	echo "<head>"
	echo "<title>My Blog</title>"
	echo '<meta charset="UTF-8">'
	echo '<link rel="stylesheet" type="text/css" href="style.css"'
	echo "</head>"
	echo "<body>"
	echo "<h1>My blog</h1>"
	echo "<section>"
	echo "</section>"
	echo "</body>"
	echo "</html>"
} > $path/index.html

createTitle() {
	echo -n "Enter post-title: "
	read -r title
	if [ -z "$title" ]; then
		echo "Title can't be empty. Aborting."
		exit 1
	fi
}

createBlogIndex() {
	count=$(ls $path/posts/ | wc -l)
	index=$(printf "0x%04x\n" $count)
}

createFileName() {
	filename=$(echo -n "$title" | tr -d '!"@£$#¤%&/()=?.,^*<>-' | tr "[:upper:] " "[:lower:]-")
}

createHeader() {
	echo "<html>"
	echo "<head>"
	echo "<title>$title</title>"
	echo "<link rel='stylesheet' type='text/css' href='../style.css'/>"
	echo "</head>"
	echo "<body>"
} > $path/$filename

createFooter() {
	echo "</body>"
	echo "</html>"
} >> $path/$filename

createPost() {
	$EDITOR $path/tmpfile
	if [ -s $path/tmpfile ]; then
		markdown $path/tmpfile
	else
		echo "Post content empty!"
		exit 1
	fi
} >> $path/$filename

updatePostList() {
	link=$(echo "[$index - $title](posts/${filename}.html)" | markdown)
	sed -i "10a ${link}" $path/index.html
}

cleanup() {
	mv $path/$filename $path/posts/${filename}.html
	rm $path/tmpfile
}

################ FUNCTION END ################

markdown -v >/dev/null 2>&1 || { echo >&2 "This script requires that markdown be installed."; exit 1; }

if [[ -n $XDG_CONFIG_HOME ]]; then
	if [ -d $XDG_CONFIG_HOME ] && [ -w $XDG_CONFIG_HOME ]; then
		config=$XDG_CONFIG_HOME/sbb
	else
		config=$HOME/.config/sbb
	fi
else
	config=$HOME/.config/sbb
fi

if ! [ -d $config/sbb ]; then
	mkdir -p $config/sbb
fi

if ! [ -e $config/config ]; then
	createConfig
	echo "Config file created at $config/config! Remember to change your path to something sensible."
	exit 1
fi

source $config/config

if ! [ -d $path/posts ]; then
	mkdir -p $path/posts >/dev/null 2>&1 || { echo >&2 "Failed to create posts folder. Is your config file setup?"; exit 1; }
fi

if ! [[ -n $EDITOR ]]; then
	nano -v >/dev/null 2>&1 || { echo >&2 "Fallback to nano failed! Fix your EDITOR."; exit 1; }
	EDITOR=nano
fi

if [ ! -e $path/index.html ]; then
	createIndexFile
fi

index=$(find $path/posts | wc)

createTitle || exit
createBlogIndex
createFileName

createHeader
createPost || exit
createFooter

updatePostList

cleanup
